Formation Python 

Différentes commandes :
$ #coding:utf-8 (à mettre en début de fichier, normalement il l'est déjà par défaut)
input() = lire au clavier
type() = retourne le type d'une donnée, variable, etc.
str.format() = formater une chaîne
int(), float(), str(), bool() = "caster une donnée; la convertir
print("") ou print('') = sert à afficher un texte à l'écran  (print est une fonction)

Exemple : 
$ print("Hello World!")
$ print('Hello World!')
 $ print('L\envers du décor') [pour les simples quotes uniquement]
$ print("L'envers\n du décor") [\n permet un retour à la ligne]
$ print("\tL'envers du décor") [\t permet la tabulation]

Les variables
- Doit commencer par une lettre ou un underscore
- Ne doit pas contenir de caractères spéciaux
- Ne pas contenir d'espaces
- Utiliser des underscores
* Il est meilleur d'utiliser la même syntaxe tout au long de son code

Exemple : 
agePersonne
age_personne
agepersonne
AgePersonne
Age_Personne
_AgePersonne

Types standards : 
- Entier numérique (int)
- Nombre flottant (float)
- Chaîne de caractéres (str)
- Booléen (bool)

Exemples :
$ agePersonne = 14 (sera considéré comme un entier)
$ prixHT = 120.46
$ agePersonne2 = "25" (sera considéré comme un texte)
$ continuer_partie = True
$ print("Âge de la personne :", agePersonne)      (en enlevant les doubles quotes, Python récupera la donnée de la variable précedemment crée)
$ print(type(agePersonne2))

$ texte = "L'âge de la personne est {} et le prix HT est de {} euros."
$ print(texte.format(agePersonne, prixHT))
ou 
$ print("L'age de la personne est {} et le prix HT est de {} euros.".format(agePersonne, prixHT))

La fonction input
$ nomJoueur = input("Choisissez un nom de joueur : ")
$ print("Bienvenue, ", nomJoueur)

Les différentes fonctions int(), float(), str(), bool()
int() :
$ prixHT = input("Entrez un prix HT : ")
$ prixHT = int(prixHT)                (int permet de convertir le prixHT en donnée chiffrable et il n'est plus considéré comme une chaîne de caractére par Python)
$ prixTTC = prixHT + (prixHT * 20 / 100)
$ print("Prix TTC=", prixTTC)

bool() : 
$ valeur_booleen = False
$ valeur_booleen = int(valeur_booleen)
$ 0

Opérateurs en Python : 
+ (addition)
- (soustraction)
* (multiplication)
/ (division)
% (modulo) reste d'une division Euclidienne

Exemple : 
calcul = 5 / 2
calcul = int(calcul)
print("Résultat =", calcul)

calcul = 5 / 2
calcul = float(calcul)
calcul2 = 5 % 2
calcul2 = int(calcul2)
print("Résultat=", calcul, "reste", calcul2)

niveauPersonnage = input("Niveau de départ ? ")
niveauPersonnage = int(niveauPersonnage)
print("Niveau du personnage", niveauPersonnage)
print("Combat réussi, tu gagnes deux niveaux !")
niveauPersonnage = niveauPersonnage + 2
print("Niveau du personnage", niveauPersonnage)

# Les conditions 

Exemple : 

$ identifiant : "Jawad"
$ mot_de_passe : "password123"
$ print("Interface de connexion")

$ user_id = input("Entrez votre identifiant : ")
$ user_password = input("Entre votre mot de passe : ")
$ if user_id and user_password == mot_de_passe:
     $ print("Vous êtes connectés, bienvenue", user_id) # print est dans le if

print("Je ne suis plus dans le 'if'")

Les opérateurs de comparaison : 

== (égal à)
!= (différent de)
< (plus petit que)
> (plus grand que)
<= (plus petit ou égal à)
>= (plus grand ou égal à)

Mots clés des conditions : if / elif / else
Les conditions multiples : 
and (ET)
or (OU)
in / not in (DANS / PAS DANS)

Exemple : 
$ lettre_hasard = "b"
$ if lettre_hasard in "aeiouy":
    $ print("C'est une consonne")
$ else:
     $ print("C'est une voyelle")
----------------------------------------------------------
$ age = 24
$ if age == 18:
    $ print("Tu viens d'être majeur")
$ elif age == 50:
    $ print ("Tu viens d'avoir 50 ans")
$ elif age == 60:
     $ print("Tu viens d'avoir 60 ans")
$ else:
    $ print("Tu as", age, "ans")
----------------------------------------
$ jeu_charge = True # True = vrai (= 1)
$ if jeu_charge:
    $ print("Le jeu est en marche")
$ else: 
        $ print("Le jeu est lancé")

$ jeu_charge = False # False = faux (= 0)
$ if not jeu_charge:
    $ print("Le jeu est éteint")
$ else: 
        $ print("Le jeu est lancé")
------------------------------------------------------------
$ age = input("Que âge as-tu ? ")
$ age = int(age)

$ if age > 0 and age < 100:
       $ print("L'âge est validé")
$ else: 
         $ print("L'âge est incorrect.")

# Au lieu du code précédent, nous pouvons noter :

$ age > 0 ET age <= 100 --> 0 > age <= 100
$ if 0 < age <= 100:
        $  print("L'âge est validé")
$ else: 
         $ print("L'âge est incorrect")

# Les boucles

Boucles : while/for
Mots-clés : break (casse la boucle) / continue (revient au début de la boucle)
Exemples : 

$ compteur = 0

$ while compteur < 5:
          $ print("Je suis une phrase")
          $ compteur += 1

$ print("Je suis sorti de la boucle...")                 # Lorsqu'il n'y plus la tabulation, on sort du while

-------------------------------------------------------------------------
jeu_lance = True
print("")

while jeu_lance:
       $Fais des instructions en rapport avec le jeu
       $ choixMenu = input("> ")

       $ if choixMenu == "again":
               continue
       $ elif choixMenu == "quit":
                  jeu_lance = False
        $ elif choixMenu == "hello":
                 print("Bonjour : ) !")
        $ else: 
                 $ print("Commande introuvable")
         

$ print("à bientôt...")

# Les fonctions (def)

$ def dire(nom_personne="Tom", message_personne="Salut !", age_personne=18):
    $ print("{} ({} ans) : {}".format(nom_personne, age_personne, message_personne)
$ dire(nom_personne="Jason", age_personne=26)
------------------------------------------------------------------------
$ def show_inventory(*list_items):
         $ for item in list_items:
                  $ print(item):

$ show_inventory("épée)
$ show_inventory("épée, "arc", "cape", "bouclier")

# Les valeurs de retour
$ def calculer_somme(nombre1, nombre2):
          $ resultat = nombre1 + nombre2
          $ return resultat

$ print(calculer_somme(5, 16))

ou
$ def calculer_somme(nombre1 + nombre2):
          $ return nombre1 + nombre 2

$ print(calculer_somme(5, 16))

# Modularité

- Les fonctions lambdas : elle ne réalise qu'une seule instruction
$ coucou = lambda:print("Bonjour")            #si on l'exécute, cela n'affiche rien du tout, nous avons seulement défini une fonction
$ coucou()               #si on l'exécute, cela affiche Bonjour, comme définit ci dessus
ou
$ calculer = lambda a, b : a + b
$ print(calculer(14, 27))

Les modules
Importer un module : import <nom_module>
from <nom_module> import <nom_fonction>
from <nom_module> import *

Exemples :
$ resultat = sqrt(100)

$ print(resulat)          #Cela ne fonctionne pas car il n'y pas le module requis (math)

Ce qui est juste : 
$ import math
$ resultat = math.sqrt(100)
$ print(resultat)
ou
$ from math import sqrt
$ resultat = sqrt(100)
$ print(resultat)
ou 
$ from math import *
$ resultat = sqrt(100)
$ print(resultat)

Pour créer un module, il faut créer un nouveau fichier dans le dossier du projet (ressemble au principe CSS avec HTML5)
Exemple : 
$ def parler(personnage, message):
        $ print("{} : {}".format(personne, message))

$ def au_revoir():
        $ print("Au revoir !")

- Ensuite dans main, écrire : 
$ import player # ceci est la commande permettant de charger le module précedemment crée
$ player.au_revoir()
$ player.parler("Jason", "Salut les abonnés ! ")

- Si l'on souhaite déplacer le module dans un sous-dossier (p.ex includes) où se trouve notre fichier main : 
$ import includes.player as player 
$ player.au_revoir()
$ player.parler("Jason", "Salut les abonnés!")

Gestion des erreurs 
- Types d'exceptions : ValueError
NameError
TypeError
ZeroDivisionError
OSError
AssertionError

$ ageUtilisateur = input("Quel âge as-tu ? ")
$ try : #permet d'essayer l'instruction
        ageUtilisateur = int(ageUtilisateur)
$ except : # ce qui se passe en cas d'échec
         $ print("L'âge indiqué est incorrect !")
$ else: # ce qui se passe en cas de réussite
         $  print("Tu as", ageUtilisateur, "ans")
$ finally: # affichera dans tout les cas
         $ print("FIN DU PROGRAMME...")
ou
$ nombre1 = 150
$ nombre2 = input("Choisir le nombre pour diviser : ")
$ try: 
       $ nombre2 = int(nombre2)
       $ print("Résultat = {}".format(nombre1 / nombre2))
$ except ZeroDivisionError:
             $ print("Vous ne pouvez pas diviser par zéro.")
$ except ValueError:
            $ print("Vous devez entrer un nombre.")
$ except:
           $ print("Valeur incorrecte.")
$ else:
           $ print("Bravo, tu as noté un nombre valide ! ")
$ finally:
          $ print("Fin du programme...")
ou pour lever l'exception 
